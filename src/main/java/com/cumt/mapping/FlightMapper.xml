<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cumt.mapper.FlightMapper">
    <resultMap id="BaseResultMap" type="com.cumt.pojo.Flight">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="flight_id" jdbcType="CHAR" property="flightId" />
        <result column="plane_id" jdbcType="VARCHAR" property="planeId" />
        <result column="depart_airport_code" jdbcType="VARCHAR" property="departAirportCode" />
        <result column="arrive_airport_code" jdbcType="VARCHAR" property="arriveAirportCode" />
        <result column="depart_time" jdbcType="TIMESTAMP" property="departTime" />
        <result column="return_time" jdbcType="TIMESTAMP" property="returnTime" />
        <result column="flight_type" jdbcType="INTEGER" property="baseFire" />
        <result column="base_fire" jdbcType="DECIMAL" property="baseFire" />
        <result column="first_class_count" jdbcType="INTEGER" property="planeId" />
        <result column="business_class_count" jdbcType="INTEGER" property="planeId" />
        <result column="economy_class_count" jdbcType="INTEGER" property="planeId" />
        <result column="depart_airport_name" jdbcType="VARCHAR" property="departAirportName" />
        <result column="arrive_airport_name" jdbcType="VARCHAR" property="arriveAirportName" />
        <result column="ticket_price" jdbcType="DECIMAL" property="ticketPrice" />
        <result column="airport_tax" jdbcType="DECIMAL" property="airportTax" />
    </resultMap>
    <select id="getFlightsBySearch" resultMap="BaseResultMap">
--         select *, departAirportName, airport.airport_name as arriveAirportName
--         from (SELECT airport.airport_name as departAirportName,flight.arrive_airport_code
--         FROM `flight` inner join `airport` on flight.depart_airport_code = airport.airport_code) as a1
--         INNER JOIN `airport` on airport.airport_code = flight.arrive_airport_code
        select flight.* from `flight`
        <where>
            flight.depart_airport_code in
            (select airport.airport_code from `city` INNER JOIN `airport` on city.city_code = airport.city_code where city.city_code = #{flightSearch.departCityCode})
            and flight.arrive_airport_code in
            (select airport.airport_code from `city` INNER JOIN `airport` on city.city_code = airport.city_code where city.city_code = #{flightSearch.arriveCityCode})
            <if test="flightSearch.departTime!=null">
                and flight.depart_time >= #{flightSearch.departTime}
            </if>
            <if test="flightSearch.returnTime!=null">
                and flight.return_time <![CDATA[<=]]> #{flightSearch.returnTime}
            </if>
        </where>
        <choose>
            <when test="flightSearch.classType == 0">
                and flight.first_class_count >= #{flightSearch.passenger}
            </when>
            <when test="flightSearch.classType == 1">
                and flight.business_class_count >= #{flightSearch.passenger}
            </when>
            <otherwise>
                and flight.economy_class_count >= #{flightSearch.passenger}
            </otherwise>
        </choose>
    </select>

    <update id="minusClassCount" >
        update flight
        <set>
            <choose>
                <when test="flightSearch.classType == 0">
                    flight.first_class_count = flight.first_class_count - 1
                </when>
                <when test="flightSearch.classType == 1">
                    flight.business_class_count = flight.business_class_count - 1
                </when>
                <otherwise>
                    flight.economy_class_count = flight.economy_class_count - 1
                </otherwise>
            </choose>
            where flight_id = #{flightSearch.flightId}
        </set>
</update>

    <!--<sql id="base_select">-->
        <!--id,city_id-->
    <!--</sql>-->
    <!--<sql id="base_from">-->
        <!--FROM city-->
    <!--</sql>-->

    <!--<sql id="base_where">-->
        <!--<where>-->
            <!--<if test="city_id!=null">-->
                <!--AND city_id = #{cityId, javaType=INTEGER}-->
            <!--</if>-->
            <!--<choose>-->

            <!--</choose>-->
        <!--</where>-->
    <!--</sql>-->

    <!--<select id="test" parameterMap="map" resultMap="BaseResultMap">-->
        <!--SELECT <include refid="base_select"/>-->
        <!--<include refid="base_from"/>-->
        <!--<include refid="base_where"/>-->
    <!--</select>-->
</mapper>

